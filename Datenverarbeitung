# Gegebene Produktdaten als Liste von Tuples
produkte = [
    ("Laptop", 899.99, 4.6, True),        # Produktname, Preis, Bewertung, Verfügbarkeit
    ("Smartphone", 549.99, 4.2, True),
    ("Tablet", 299.99, 3.9, False),
    ("Kopfhörer", 149.99, 4.8, True),
    ("Maus", 19.99, 4.1, True),
]

# Aufgabe 1: Liste mit den Namen der verfügbaren Produkte erstellen
verfuegbare_produkte = []  # Hier erstellen wir eine leere Liste, um die verfügbaren Produkte zu speichern.
for produkt in produkte:    # Schleife durch alle Produkte in der Liste.
    if produkt[3]:          # Überprüfen, ob das Produkt verfügbar ist (der vierte Wert im Tuple).
        verfuegbare_produkte.append(produkt[0])  # Wenn ja, fügen wir den Produktnamen zur Liste hinzu.

# Ausgabe der verfügbaren Produkte
print("Verfügbare Produkte:", verfuegbare_produkte)

# Aufgabe 2: Liste mit Produktnamen unter 50 Euro und Bewertung >= 4 erstellen
guenstige_gute_produkte = []  # Hier erstellen wir eine leere Liste für günstige Produkte mit guter Bewertung.
for produkt in produkte:      # Schleife durch alle Produkte.
    if produkt[1] < 50 and produkt[2] >= 4:  # Überprüfen der Preis- und Bewertungskriterien.
        guenstige_gute_produkte.append(produkt[0])  # Wenn die Kriterien erfüllt sind, fügen wir den Produktnamen hinzu.

# Ausgabe der günstigen Produkte mit guter Bewertung
print("Günstige Produkte mit guter Bewertung:", guenstige_gute_produkte)

# Aufgabe 3: Durchschnittspreis aller Produkte berechnen
gesamt_preis = 0  # Hier initialisieren wir die Summe der Preise.
for produkt in produkte:  # Schleife durch alle Produkte.
    gesamt_preis += produkt[1]  # Summieren der Preise.

durchschnittspreis = gesamt_preis / len(produkte)  # Berechnen des Durchschnittspreises.

# Ausgabe des Durchschnittspreises
print("Durchschnittspreis aller Produkte:", durchschnittspreis)

# Aufgabe 4: Teuerstes Produkt in der Liste finden
teuerstes_produkt = produkte[0]  # Wir nehmen das erste Produkt als vorläufig das teuerste.

for produkt in produkte:  # Schleife durch alle Produkte.
    if produkt[1] > teuerstes_produkt[1]:  # Überprüfen, ob der Preis höher ist als beim vorläufig teuersten Produkt.
        teuerstes_produkt = produkt  # Wenn ja, setzen wir dieses Produkt als das teuerste.

# Ausgabe des teuersten Produkts
print("Teuerstes Produkt:", teuerstes_produkt[0])
